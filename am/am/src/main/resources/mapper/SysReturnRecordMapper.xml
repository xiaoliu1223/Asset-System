<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cg.test.am.mapper.SysReturnRecordMapper" >
  <resultMap id="BaseResultMap" type="com.cg.test.am.model.SysReturnRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="job_no" property="jobNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="asset_name" property="assetName" jdbcType="VARCHAR" />
    <result column="asset_type" property="assetType" jdbcType="INTEGER" />
    <result column="asset_code" property="assetCode" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="units" property="units" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="used_age" property="usedAge" jdbcType="VARCHAR" />
    <result column="asset_status" property="assetStatus" jdbcType="INTEGER" />
    <result column="flow_path" property="flowPath" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, job_no, user_id, username, department_id, asset_name, asset_type, asset_code, 
    num, units, description, used_age, asset_status, flow_path, status, create_time, update_time
  </sql>
  <sql id="where">
    <where>
      <if test="params.assetName != null and params.assetName != ''">
        and srr.asset_name like concat('%',#{params.assetName},'%')
      </if>
      <if test="params.jobNo != null and params.jobNo != ''">
        and srr.job_no like concat('%',#{params.jobNo},'%')
      </if>
      <if test="params.assetCode != null and params.assetCode != ''">
        and srr.asset_code like concat('%',#{params.assetCode},'%')
      </if>
      <if test="params.status != null">
        and srr.status = #{params.status}
      </if>
      <if test="params.departmentIds != null and params.departmentIds != ''">
        and FIND_IN_SET(srr.department_id, #{params.departmentIds})
      </if>
    </where>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_return_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_return_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cg.test.am.model.SysReturnRecord" >
    insert into sys_return_record (id, job_no, user_id, 
      username, department_id, asset_name, 
      asset_type, asset_code, num, units,
      description, used_age, asset_status, 
      flow_path, status, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{jobNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, #{assetName,jdbcType=VARCHAR}, 
      #{assetType,jdbcType=INTEGER}, #{assetCode,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{units,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{usedAge,jdbcType=VARCHAR}, #{assetStatus,jdbcType=INTEGER}, 
      #{flowPath,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cg.test.am.model.SysReturnRecord" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_return_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobNo != null" >
        job_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="assetName != null" >
        asset_name,
      </if>
      <if test="assetType != null" >
        asset_type,
      </if>
      <if test="assetCode != null" >
        asset_code,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="units != null" >
        units,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="usedAge != null" >
        used_age,
      </if>
      <if test="assetStatus != null" >
        asset_status,
      </if>
      <if test="flowPath != null" >
        flow_path,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="specification != null" >
        specification,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="jobNo != null" >
        #{jobNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="assetName != null" >
        #{assetName,jdbcType=VARCHAR},
      </if>
      <if test="assetType != null" >
        #{assetType,jdbcType=INTEGER},
      </if>
      <if test="assetCode != null" >
        #{assetCode,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="units != null" >
        #{units,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="usedAge != null" >
        #{usedAge,jdbcType=VARCHAR},
      </if>
      <if test="assetStatus != null" >
        #{assetStatus,jdbcType=INTEGER},
      </if>
      <if test="flowPath != null" >
        #{flowPath,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="specification != null" >
        #{specification,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cg.test.am.model.SysReturnRecord" >
    update sys_return_record
    <set >
      <if test="jobNo != null" >
        job_no = #{jobNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="assetName != null" >
        asset_name = #{assetName,jdbcType=VARCHAR},
      </if>
      <if test="assetType != null" >
        asset_type = #{assetType,jdbcType=INTEGER},
      </if>
      <if test="assetCode != null" >
        asset_code = #{assetCode,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="units != null" >
        units = #{units,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="usedAge != null" >
        used_age = #{usedAge,jdbcType=VARCHAR},
      </if>
      <if test="assetStatus != null" >
        asset_status = #{assetStatus,jdbcType=INTEGER},
      </if>
      <if test="flowPath != null" >
        flow_path = #{flowPath,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cg.test.am.model.SysReturnRecord" >
    update sys_return_record
    set job_no = #{jobNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      asset_name = #{assetName,jdbcType=VARCHAR},
      asset_type = #{assetType,jdbcType=INTEGER},
      asset_code = #{assetCode,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      units = #{units,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      used_age = #{usedAge,jdbcType=VARCHAR},
      asset_status = #{assetStatus,jdbcType=INTEGER},
      flow_path = #{flowPath,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="count" resultType="int">
    select count(1) from sys_return_record srr <include refid="where" />
  </select>

  <select id="list" resultType="com.cg.test.am.vo.response.SysReturnRecordResp">
    select srr.*,sd.name as departmentName,sat.name assetTypeName  from sys_return_record srr
    left join sys_department sd on sd.id = srr.department_id
    left join sys_asset_type sat on sat.id = srr.asset_type
    <include refid="where" />
    order by srr.id desc
    limit #{offset}, #{limit}
  </select>

  <select id="auditCount" resultType="int">
    select count(1)
    <if test="params.status == 0" >
      from sys_return_record srr where  srr.flow_path = #{params.userId}
    </if>
    <if test="params.status != 0" >
      from sys_audit_log sal
      left join  sys_return_record srr on srr.id = sal.related_id
      where  sal.audit_by = #{params.userId}
      and sal.type = 4 and sal.id is not null
      <if test="params.auditResult != null and params.auditResult != ''and params.auditResult != 0">
        and sal.audit_status = #{params.auditResult}
      </if>
    </if>

  </select>

  <select id="auditList" resultType="com.cg.test.am.vo.response.SysReturnRecordResp">
    select
    srr.id,srr.job_no,srr.user_id,srr.username,srr.department_id,srr.asset_name,srr.asset_type,srr.asset_code,srr.num,srr.units,srr.description,
    srr.used_age,srr.asset_status,srr.flow_path,srr.create_time,srr.update_time,srr.specification,
    sd.name as departmentName,sat.name assetTypeName
    <if test="params.status == 0" >
      ,srr.status
      from sys_return_record srr
    </if>

    <if test="params.status != 0" >
      ,sal.audit_status status,sal.reason reason
      from sys_audit_log sal
      left join  sys_return_record srr on srr.id = sal.related_id
    </if>
    left join sys_department sd on sd.id = srr.department_id
    left join sys_asset_type sat on sat.id = srr.asset_type
    <if test="params.status == 0" >
      where  srr.flow_path = #{params.userId}
    </if>

    <if test="params.status != 0" >
      where  sal.audit_by = #{params.userId}
      and sal.type = 4 and sal.id is not null
      <if test="params.auditResult != null and params.auditResult != ''and params.auditResult != 0">
        and sal.audit_status = #{params.auditResult}
      </if>
    </if>
    <if test="params.status == 0" >
      order by srr.id desc
    </if>
    <if test="params.status != 0" >
      order by sal.id desc
    </if>
    limit #{offset}, #{limit}
  </select>

  <select id="getById" resultType="com.cg.test.am.vo.response.SysReturnRecordResp">
    select srr.*,sd.name as departmentName,sat.name assetTypeName  from sys_return_record srr
    left join sys_department sd on sd.id = srr.department_id
    left join sys_asset_type sat on sat.id = srr.asset_type
    where srr.id = #{id}
  </select>

</mapper>