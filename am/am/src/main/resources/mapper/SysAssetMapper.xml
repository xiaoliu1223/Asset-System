<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cg.test.am.mapper.SysAssetMapper" >
  <resultMap id="BaseResultMap" type="com.cg.test.am.model.SysAsset" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="asset_code" property="assetCode" jdbcType="VARCHAR" />
    <result column="asset_type" property="assetType" jdbcType="INTEGER" />
    <result column="asset_name" property="assetName" jdbcType="VARCHAR" />
    <result column="asset_num" property="assetNum" jdbcType="INTEGER" />
    <result column="units" property="units" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="charge_off_money" property="chargeOffMoney" jdbcType="DECIMAL" />
    <result column="check_status" property="checkStatus" jdbcType="INTEGER" />
    <result column="inventory_status" property="inventoryStatus" jdbcType="INTEGER" />
    <result column="asset_status" property="assetStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="out_num" property="outNum" jdbcType="INTEGER" />
    <result column="charge_off_num" property="chargeOffNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, asset_code, asset_type, asset_name, asset_num, units, price, department_id, charge_off_money,
    check_status, inventory_status, asset_status, create_time, user_id,username, update_time,
    del_flag,out_num,charge_off_num
  </sql>

  <sql id="where">
    <where>
      <if test="params.assetName != null and params.assetName != ''">
        and sa.asset_name like concat('%',#{params.assetName},'%')
      </if>
      <if test="params.assetType != null and params.assetType != ''">
        and sa.asset_type = #{params.assetType}
      </if>
      <if test="params.assetCode != null and params.assetCode != ''">
        and sa.asset_code like concat('%',#{params.assetCode},'%')
      </if>
      <if test="params.inventoryStatus != null and params.inventoryStatus != ''">
        and sa.inventory_status = #{params.inventoryStatus}
      </if>
      <if test="params.departmentId != null and params.departmentId != ''">
        and sa.department_id = #{params.departmentId}
      </if>
      <if test="params.departmentIds != null and params.departmentIds != ''">
        and FIND_IN_SET(sa.department_id, #{params.departmentIds})
      </if>
      and sa.del_flag = 0
    </where>
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_asset
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_asset
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cg.test.am.model.SysAsset" >
    insert into sys_asset (id, asset_code, asset_type, 
      asset_name, asset_num, units, price,
      department_id, charge_off_money, check_status, 
      inventory_status, asset_status, create_time, 
      user_id,username, update_time, del_flag,out_num,charge_off_num
      )
    values (#{id,jdbcType=BIGINT}, #{assetCode,jdbcType=VARCHAR}, #{assetType,jdbcType=INTEGER}, 
      #{assetName,jdbcType=VARCHAR}, #{assetNum,jdbcType=INTEGER}, #{units,jdbcType=VARCHAR},#{price,jdbcType=DECIMAL},
      #{departmentId,jdbcType=INTEGER}, #{chargeOffMoney,jdbcType=DECIMAL}, #{checkStatus,jdbcType=INTEGER}, 
      #{inventoryStatus,jdbcType=INTEGER}, #{assetStatus,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, 
      #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},#{updateTime,jdbcType=BIGINT}, #{delFlag,jdbcType=INTEGER},
       #{outNum,jdbcType=INTEGER}, #{chargeOffNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cg.test.am.model.SysAsset" >
    insert into sys_asset
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="assetCode != null" >
        asset_code,
      </if>
      <if test="assetType != null" >
        asset_type,
      </if>
      <if test="assetName != null" >
        asset_name,
      </if>
      <if test="assetNum != null" >
        asset_num,
      </if>
      <if test="units != null" >
        units,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="chargeOffMoney != null" >
        charge_off_money,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="inventoryStatus != null" >
        inventory_status,
      </if>
      <if test="specification != null" >
        specification,
      </if>
      <if test="assetStatus != null" >
        asset_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="outNum != null" >
        out_num,
      </if>
      <if test="chargeOffNum != null" >
        charge_off_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="assetCode != null" >
        #{assetCode,jdbcType=VARCHAR},
      </if>
      <if test="assetType != null" >
        #{assetType,jdbcType=INTEGER},
      </if>
      <if test="assetName != null" >
        #{assetName,jdbcType=VARCHAR},
      </if>
      <if test="assetNum != null" >
        #{assetNum,jdbcType=INTEGER},
      </if>
      <if test="units != null" >
        #{units,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="chargeOffMoney != null" >
        #{chargeOffMoney,jdbcType=DECIMAL},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="inventoryStatus != null" >
        #{inventoryStatus,jdbcType=INTEGER},
      </if>
      <if test="specification != null" >
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="assetStatus != null" >
        #{assetStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username!= null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="outNum != null" >
        #{outNum,jdbcType=INTEGER},
      </if>
      <if test="chargeOffNum != null" >
        #{chargeOffNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cg.test.am.model.SysAsset" >
    update sys_asset
    <set >
      <if test="assetCode != null" >
        asset_code = #{assetCode,jdbcType=VARCHAR},
      </if>
      <if test="assetType != null" >
        asset_type = #{assetType,jdbcType=INTEGER},
      </if>
      <if test="assetName != null" >
        asset_name = #{assetName,jdbcType=VARCHAR},
      </if>
      <if test="assetNum != null" >
        asset_num = #{assetNum,jdbcType=INTEGER},
      </if>
      <if test="units != null" >
        units = #{units,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="chargeOffMoney != null" >
        charge_off_money = #{chargeOffMoney,jdbcType=DECIMAL},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=INTEGER},
      </if>
      <if test="specification != null" >
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="inventoryStatus != null" >
        inventory_status = #{inventoryStatus,jdbcType=INTEGER},
      </if>
      <if test="assetStatus != null" >
        asset_status = #{assetStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="outNum != null" >
        out_num = #{outNum,jdbcType=INTEGER},
      </if>
      <if test="chargeOffNum != null" >
        charge_off_num = #{chargeOffNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cg.test.am.model.SysAsset" >
    update sys_asset
    set asset_code = #{assetCode,jdbcType=VARCHAR},
      asset_type = #{assetType,jdbcType=INTEGER},
      asset_name = #{assetName,jdbcType=VARCHAR},
      asset_num = #{assetNum,jdbcType=INTEGER},
      units = #{units,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      department_id = #{departmentId,jdbcType=INTEGER},
      charge_off_money = #{chargeOffMoney,jdbcType=DECIMAL},
      check_status = #{checkStatus,jdbcType=INTEGER},
      inventory_status = #{inventoryStatus,jdbcType=INTEGER},
      asset_status = #{assetStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=INTEGER},
      out_num = #{outNum,jdbcType=INTEGER},
      charge_off_num = #{chargeOffNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="count" resultType="Long">
    select count(1) from sys_asset sa <include refid="where" />
  </select>

  <select id="list" resultType="com.cg.test.am.vo.response.SysAssetResp">
    select
    sa.*,sat.name as assetTypeName, sat.super_id as assetSuperType, sd.name as departmentName
    from sys_asset sa
    left join sys_asset_type sat on sat.id = sa.asset_type
    left join sys_department sd on sd.id = sa.department_id
    <include refid="where" />
    order by sa.id desc
    limit #{offset}, #{limit}
  </select>

  <select id="getOne" resultType="com.cg.test.am.vo.response.SysAssetResp">
    select
    sa.*,sat.name as assetTypeName,sd.name as departmentName
    from sys_asset sa
    left join sys_asset_type sat on sat.id = sa.asset_type
    left join sys_department sd on sd.id = sa.department_id
    where sa.del_flag = 0 and sa.id = #{id}
  </select>

  <select id="sts" resultType="com.cg.test.am.vo.response.SysAssetStatusAnalysis">
    select sum(asset_num) as num, sum(asset_num * price) as amount
    from sys_asset
    where 1 = 1
    <if test="params.ids != null">
      and asset_type in
      <foreach collection="params.ids" index="index" item="id" open="(" separator="," close=")">
        #{id}
      </foreach>
    </if>
    <if test="params.inventoryStatus != null">
      and inventory_status = #{params.inventoryStatus}
    </if>


  </select>
    <select id="assetNumAnalysisRespList" resultType="com.cg.test.am.vo.response.SysAssetNumAnalysisResp">

      select a.department_id as departmentId, b.name as departmentName, sum(a.asset_num) as inNum,
       sum(a.out_num) as outNum, sum(a.charge_off_num) as scrapNum
      from sys_asset a
      left join sys_department b on a.department_id = b.id
      where 1 = 1
      <if test="params.departmentIds != null">
        and department_id in
        <foreach collection="params.departmentIds" index="index" item="departmentId" open="(" separator="," close=")">
          #{departmentId}
        </foreach>
      </if>
      group by a.department_id, b.name
    </select>

  <select id="downloadExcel" resultType="java.util.LinkedHashMap">
    select
    a.asset_name as 资产名称,
    a.asset_code as 资产编号,
    sat.name as 资产类型,
    a.asset_num as 资产数,
    a.units as 单位,
    a.price as 单价,
    b.name as 所属部门,
    a.charge_off_money as 核销返还金额,
    if(a.check_status = 0,"未盘点","已盘点") as 盘点状态,
    if(a.inventory_status = 1,"在库",if(a.inventory_status = 2,"出库","报废")) as 库存状态,
    if(a.asset_status = 0,"完好",if(a.asset_status = 1,"可继续使用","报废")) as 资产状态,
    FROM_UNIXTIME(a.create_time/1000,'%Y-%m-%d %h:%i:%s') as 创建时间,
    a.specification as 规格型号,
    a.username as 录入人员姓名,
    a.out_num  as 出库数量,
    a.charge_off_num as 核销数
    from sys_asset a
    left join sys_asset_type sat on sat.id = a.asset_type
    left join sys_department b on a.department_id = b.id
    where a.del_flag = 0
    <if test="departmentIds != null">
    and FIND_IN_SET(a.department_id, #{departmentIds})
    </if>
    order by b.name
  </select>

  <select id="selectCustomizedPage" resultType="com.cg.test.am.vo.response.SysAssetResp">
    select
    sa.*,sat.name as assetTypeName,sd.name as departmentName
    from sys_asset sa
    left join sys_asset_type sat on sat.id = sa.asset_type
    left join sys_department sd on sd.id = sa.department_id
    where 1=1
    <if test="params.departmentId != null">
      and sa.department_id = #{params.departmentId}
    </if>
    <if test="params.assetName != null">
      and sa.asset_name like concat('%',#{params.assetName},'%')
    </if>
    <if test="params.lowestPrice != null and params.highestPrice != null">
      and sa.price between #{params.lowestPrice} and #{params.highestPrice}
    </if>
    <if test="params.lowestPrice != null and params.highestPrice == null">
      and sa.price &gt;= #{params.lowestPrice}
    </if>
    order by sa.id desc

  </select>
</mapper>