<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cg.test.am.mapper.SysReceiveRecordMapper" >
  <resultMap id="BaseResultMap" type="com.cg.test.am.model.SysReceiveRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="job_no" property="jobNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="asset_name" property="assetName" jdbcType="VARCHAR" />
    <result column="asset_type" property="assetType" jdbcType="INTEGER" />
    <result column="asset_code" property="assetCode" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="units" property="units" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="flow_path" property="flowPath" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="specification" property="specification" jdbcType="VARCHAR" />
    <result column="used_by" property="usedBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, job_no, user_id, username, department_id, asset_name, asset_type, asset_code, 
    num, units, description, flow_path, status, create_time, update_time,specification, used_by
  </sql>
  <sql id="where">
    <where>
      <if test="params.assetName != null and params.assetName != ''">
        and sar.asset_name like concat('%',#{params.assetName},'%')
      </if>
      <if test="params.assetType != null and params.assetType != ''">
        and sar.asset_type = #{params.assetType}
      </if>
      <if test="params.jobNo != null and params.jobNo != ''">
        and sar.job_no like concat('%',#{params.jobNo},'%')
      </if>
      <if test="params.assetCode != null and params.assetCode != ''">
        and sar.asset_code like concat('%',#{params.assetCode},'%')
      </if>
      <if test="params.status != null">
        and sar.status = #{params.status}
      </if>
      <if test="params.username != null and params.username != ''">
        and sar.username like concat('%',#{params.username},'%')
      </if>
      <if test="params.departmentIds != null and params.departmentIds != ''">
        and FIND_IN_SET(sar.department_id, #{params.departmentIds})
      </if>
    </where>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_receive_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_receive_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cg.test.am.model.SysReceiveRecord" >
    insert into sys_receive_record (id, job_no, user_id, 
      username, department_id, asset_name, 
      asset_type, asset_code, num, units,
      description, flow_path, status, 
      create_time, update_time,specification, used_by)
    values (#{id,jdbcType=BIGINT}, #{jobNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, #{assetName,jdbcType=VARCHAR}, 
      #{assetType,jdbcType=INTEGER}, #{assetCode,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{units,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{flowPath,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT},#{specification,jdbcType=VARCHAR}, #{usedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cg.test.am.model.SysReceiveRecord" keyProperty="id" useGeneratedKeys="true" >
    insert into sys_receive_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobNo != null" >
        job_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="assetName != null" >
        asset_name,
      </if>
      <if test="assetType != null" >
        asset_type,
      </if>
      <if test="assetCode != null" >
        asset_code,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="units != null" >
        units,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="flowPath != null" >
        flow_path,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="specification != null" >
        specification,
      </if>
      <if test="usedBy != null" >
        used_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="jobNo != null" >
        #{jobNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="assetName != null" >
        #{assetName,jdbcType=VARCHAR},
      </if>
      <if test="assetType != null" >
        #{assetType,jdbcType=INTEGER},
      </if>
      <if test="assetCode != null" >
        #{assetCode,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="units != null" >
        #{units,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="flowPath != null" >
        #{flowPath,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="specification != null" >
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="usedBy != null" >
        #{usedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cg.test.am.model.SysReceiveRecord" >
    update sys_receive_record
    <set >
      <if test="jobNo != null" >
        job_no = #{jobNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="assetName != null" >
        asset_name = #{assetName,jdbcType=VARCHAR},
      </if>
      <if test="assetType != null" >
        asset_type = #{assetType,jdbcType=INTEGER},
      </if>
      <if test="assetCode != null" >
        asset_code = #{assetCode,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="units != null" >
        units = #{units,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="flowPath != null" >
        flow_path = #{flowPath,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="specification != null" >
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="usedBy != null" >
        used_by = #{usedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cg.test.am.model.SysReceiveRecord" >
    update sys_receive_record
    set job_no = #{jobNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      asset_name = #{assetName,jdbcType=VARCHAR},
      asset_type = #{assetType,jdbcType=INTEGER},
      asset_code = #{assetCode,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      units = #{units,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      flow_path = #{flowPath,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      specification = #{specification,jdbcType=VARCHAR},
      used_by = #{usedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="count" resultType="int">
    select count(1) from sys_receive_record sar <include refid="where" />
  </select>

  <select id="list" resultType="com.cg.test.am.vo.response.SysReceiveRecordListResp">
    select sar.*,sd.name as departmentName,sat.name assetTypeName  from sys_receive_record sar
    left join sys_department sd on sd.id = sar.department_id
    left join sys_asset_type sat on sat.id = sar.asset_type
    <include refid="where" />
    order by sar.id desc
    limit #{offset}, #{limit}
  </select>

  <select id="auditCount" resultType="int">
    select count(1)
    <if test="params.status == 0" >
      from sys_receive_record sar where  sar.flow_path = #{params.userId}
    </if>
    <if test="params.status != 0" >
      from sys_audit_log sal
      left join  sys_receive_record sar on sar.id = sal.related_id
      where  sal.audit_by = #{params.userId}
      and sal.type = 3 and sal.id is not null
      <if test="params.auditResult != null and params.auditResult != '' and params.auditResult != 0">
        and sal.audit_status = #{params.auditResult}
      </if>
    </if>
  </select>

  <select id="auditlist" resultType="com.cg.test.am.vo.response.SysReceiveRecordListResp">
    select
    sar.id,sar.job_no,sar.user_id,sar.username,sar.department_id,sar.asset_name,sar.asset_type,
    sar.asset_code,sar.num,sar.units,sar.description,sar.flow_path,sar.create_time,sar.update_time,sar.specification, sar.used_by,
    sd.name as departmentName,sat.name assetTypeName
    <if test="params.status == 0" >
      ,sar.status
      from sys_receive_record sar
    </if>

    <if test="params.status != 0" >
      ,sal.audit_status status,sal.reason reason
      from sys_audit_log sal
      left join  sys_receive_record sar on sar.id = sal.related_id
    </if>
    left join sys_department sd on sd.id = sar.department_id
    left join sys_asset_type sat on sat.id = sar.asset_type
    <if test="params.status == 0" >
      where  sar.flow_path = #{params.userId}
    </if>

    <if test="params.status != 0" >
      where  sal.audit_by = #{params.userId}
      and sal.type = 3 and sal.id is not null
      <if test="params.auditResult != null and params.auditResult != '' and params.auditResult != 0">
        and sal.audit_status = #{params.auditResult}
      </if>
    </if>
    <if test="params.status == 0" >
      order by sar.id desc
    </if>
    <if test="params.status != 0" >
      order by sal.id desc
    </if>
    limit #{offset}, #{limit}
  </select>

  <select id="getOne" resultType="com.cg.test.am.vo.response.SysReceiveRecordListResp">
    select sar.*,sd.name as departmentName,sat.name assetTypeName  from sys_receive_record sar
    left join sys_department sd on sd.id = sar.department_id
    left join sys_asset_type sat on sat.id = sar.asset_type
    where sar.id = #{id}
  </select>
  <select id="sts" resultType="com.cg.test.am.vo.response.SysAssetReceiveAnalysis">
    select a.id as departmentId, a.name as departmentName, IFNULL(sum(b.num), 0) as receiveNum, IFNULL(sum(b.num * c.price), 0) as amount
    from sys_department a
    left join sys_receive_record b on b.department_id = a.id
    and b.status in (3, 4, 5)
    <if test="(params.startTime != null and params.startTime !=0) and (params.endTime != null and params.endTime !=0) ">
        and b.create_time between #{params.startTime} and #{params.endTime}
    </if>
    <if test="params.ids != null">
      and b.asset_type in
      <foreach collection="params.ids" index="index" item="id" open="(" separator="," close=")">
        #{id}
      </foreach>
    </if>
    left join sys_asset c on b.asset_code = c.asset_code
    where 1=1 and a.id not in (1, 13, 14, 15)
    <if test="params.departmentIds != null">
      and a.id in
      <foreach collection="params.departmentIds" index="index" item="departmentId" open="(" separator="," close=")">
        #{departmentId}
      </foreach>
    </if>
    group by a.id, a.name
  </select>
</mapper>